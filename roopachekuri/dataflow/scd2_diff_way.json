{
	"name": "scd2_diff_way",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "traget"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "sink3",
					"rejectedDataLinkedService": {
						"referenceName": "ADLS_LS",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "sourcehash"
				},
				{
					"name": "filter1"
				},
				{
					"name": "targethash"
				},
				{
					"name": "exists1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "exists2"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "alterRow2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Department as string,",
				"          Title as string,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EmployeeID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Department as string,",
				"          Title as string,",
				"          Location as string,",
				"          Active_flag as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> traget",
				"source1 select(mapColumn(",
				"          EmployeeID,",
				"          FirstName,",
				"          LastName,",
				"          Department,",
				"          Title,",
				"          Location",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(sourcehash = md5(EmployeeID,FirstName,LastName,Department,Title)) ~> sourcehash",
				"traget filter(Active_flag == 1) ~> filter1",
				"filter1 derive(tgthashvalue = md5(EmployeeID,FirstName,LastName,Department,Title)) ~> targethash",
				"sourcehash, targethash exists(sourcehash == tgthashvalue,",
				"     negate:true,",
				"     broadcast: 'left')~> exists1",
				"exists1 derive(activeflag = 1) ~> derivedColumn1",
				"derivedColumn1 alterRow(updateIf(true())) ~> alterRow1",
				"targethash, sourcehash exists(traget@EmployeeID ==select1@EmployeeID &&traget@FirstName==select1@FirstName&& traget@LastName==select1@LastName&&traget@Department == select1@Department && traget@Title==select1@Title,",
				"     negate:false,",
				"     broadcast: 'left')~> exists2",
				"exists2 derive(Active_flag = 0) ~> derivedColumn2",
				"derivedColumn2 alterRow(updateIf(true())) ~> alterRow2",
				"alterRow2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Department as string,",
				"          Title as string,",
				"          Location as string,",
				"          Active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['EmployeeID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink2",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EmployeeID as integer,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Department as string,",
				"          Title as string,",
				"          Location as string,",
				"          Active_flag as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['EmployeeID'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink3"
			]
		}
	}
}